1. splash화면 적용
    화면을 생성했다가 메인에서 그냥 바로 처리 하는 방식으로 변경함.
2. 하단 메뉴바 적용 tabItem.dart
3. home화면 만들기  HomeFragment
   새로고침  RefreshIndicator
   알림기능 - notification  // timeago() //현재시간 기준으로 ~~전....표시하는 라이브 러리// 다이얼로그(d_notification.dart)
4. 혜택화면 만들기
5. 주식 화면 만들기...Stock1  //tabController 탭 선택시 화면전환 관련 시점 확인....필수임..중요
   테마가 dart와 light 2개 버전  //상속은 abs_theme_colors를 받아서 변경할 색만 구현해야한다.....
6. get X 상태관리 라이브러리  obx()와 RXList 함수 사용
   검색 및 검색어 자동완성 기능구현
7. setting화면 구현
   push, silder, dataTime형태의 버튼 값을 저장 하는 preferences 기본 형태 / 다이얼로그 값을 화면에 적용
   change_app_package_name 패키지 이름을 변경하는 방법  #https://pub.dev/packages/change_app_package_name
   앱스토어 올릴때 패키지이름을 중복되지 않게 잘 지어서 올려야 함.. (build.gradle의 applicationId명이 정상적이여야함. 이걸 수정함.
   주소 들어가서 설명서 읽어보면 됨...
   ios : xcode-> open a project or file 선택 -> 프로젝트 ios폴더의 Runner.xcworkspace파일선택 -> 좌측 Runner 탭의 Bundle identifier input칸의 패키지 명을 변경
   오픈소스관련... 이미 다 구현해 놨음....주기적으로  라이브러리들을 반영하면됨.
   flutter pub run flutter_oss_licenses:generate.dart -o assets/json/licenses.json

8. animation
   1) # https://pub.dev/packages/flutter_animate 애니메이션...... 가장 쉬운버전으로 home화면에 적용
      #flutter pub add flutter_animate 터미널입력방식도 있으나. 개발상 버전이 안맞아서 그냥 yaml방식으로 함.
      #flutter pub add live_background 바탕화면을 영상으로...
   2) 팝업 자연스럽게 transfrom 예제 주식 탭의 검색에서 구현
      # https://pub.dev/packages/animations 2.0.7 학습시점의 버전.
      리스트를 위젯으로 구현했던것을 그냥 애니매이션 안에서 구현했다......바뀌었다...
   3) 플루터의 내장 animation......flutter inspector를 통해 해당 화면의 코도로 이동해준다.
   4) 설정에서 스크롤에 따라 크기가 변하는 title구현
   5) 설정에서 스크롤에 따라 이미지 색상 변경 구현
   6) 설정에서 explicit animation 구현  --animation controller 스크롤 또는 슬라이더 값으로 이미지 위치를 움직이는 애니메이션
9. 그리는 것을 바탕으로 하는 애니메이션 rive ... lottie 라이브러리 등등.....유투브 rive101
    https://rive.app/ 가입/ https://rive.app/@JcToon/ 여기껄 내꺼에....
    flutter pub add rive //설치 예제가 아닌 읽어보세요의 PlayPauseAnimation() 이하 내용 복사 기본예제

   1) 좋아요...버튼  https://rive.app/community/files/375-1405-light-like/
   2) 로그인페이지 ..이미지 붙여서 로그인 페이지 생성
   3) 종료 버튼
10. Advanced
   1) list.set.map. generic
   2) Future, Async, Await
   3) Stream, Controller,,,,,,
     카운트 진행 이후 좋아요 버튼구역 활성화 응용하였는데...좋아요의 버튼값이 외부값이다 보니 스트림이 적용되어
     내부값으로 변경하였고
     stream 계속 반복되는 문제가 발생하여 streamController 변경, 조정해야 했다.
   4)Iterable, Sync, Async
     리스트와 함께쓰는 iterable

11. 서버 연결하는 package:http/http.dart as http;  http.post(Uri.parse("서버주소"), body:{"message": message});
12. state managementsms => 빠른 개발과 앱 스펙 수정시 빠르게 찾고 수정하기 위해서임.
    scoped model -> 1. 해당화면이 사라지면 자동으로 메모리 해제, 2. Id(구별자) 없이도 상위 데이터참조 가능
    static model -> 1. 메모리 관리는 개발자가 직접, 2. 데이터 참조시 ID(구별자) 항상 필요, 3. Scope보다 구현이 쉽고 모든 코드에 State에 접근 수정가능
    일정관리 화면인데 날짜를 기본 언어에 따른 내용을 적용함